esphome:
  name: "weather-platform"
  friendly_name: Weather Sensors Platform

esp32:
  board: seeed_xiao_esp32c3
  framework:
    type: arduino
    version: latest
    platform_version: 6.3.2

# Enable logging
logger:
  level: VERBOSE

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Weather"
    password: !secret wifi_ap_password

captive_portal:

i2c:
  sda: GPIO6
  scl: GPIO7
  scan: true
  frequency: 800kHz

ads1115:
  address: 0x48

sensor:
  - platform: wifi_signal
    name: "Weather Platform WiFi Signal"
    update_interval: 60s
  - platform: uptime
    name: "Weather Platform Uptime"
    update_interval: 60s
  - platform: sht3xd
    temperature:
      name: "Temperature"
      id: sht3xd_Temperature
    humidity:
      name: "Humidity"
      id: sht3xd_Humidity
    address: 0x44
    update_interval: 60s
  - platform: ads1115
    name: "ADC Channel 0"
    id: adc_0
    multiplexer: A0_GND
    gain: 2.048
    resolution: 16 bits
    filters:
      - offset: 0
      - multiply: 1.0
      - sliding_window_moving_average:
          window_size: 6
          send_every: 6
    update_interval: 10s ## 10s
  - platform: ads1115
    name: "ADC Channel 1"
    id: adc_1
    multiplexer: A1_GND
    gain: 2.048
    resolution: 16 bits
    filters:
      - offset: 0
      - multiply: 1.0
      - sliding_window_moving_average:
          window_size: 6
          send_every: 6
    update_interval: 10s ## 10s
  - platform: template
    name: "Wind Direction"
    lambda: |-
      if (adc_0->state && adc_1->state) {
        return (atan2(adc_0->state, adc_1->state) * RAD_TO_DEG);
      } else {
        return {};
      }
    state_class: measurement
    update_interval: 60s ## 60s
  - platform: dps310
    temperature:
      name: "Outside Temperature"
      id: outside_temperature
      unit_of_measurement: "Â°C"
    pressure:
      name: "Outside Pressure"
      id: outside_pressure
      unit_of_measurement: "mmHg"
    address: 0x77
    update_interval: 60s
  - platform: pulse_counter
    name: "Wind Speed"
    id: wind_speed
    use_pcnt: true
    pin: 
      number: GPIO4
      inverted: false
      mode:
        input: true
        pullup: true
    unit_of_measurement: "m/s"
    count_mode:
      falling_edge: INCREMENT
      rising_edge: DISABLE
    update_interval: 10s
  - platform: pulse_counter
    name: "Rainfall Bucket Dumps"
    id: rainfall_buckets
    pin:
      number: GPIO5
      inverted: false
      mode:
        input: true
        pullup: true
    count_mode:
      falling_edge: INCREMENT
      rising_edge: DISABLE
    filters:
      - lambda: return x;
    update_interval: 10s
  - platform: integration
    name: "Daily Rainfall"
    time_unit: h # d
    integration_method: trapezoid
    restore: true
    sensor: rainfall_buckets
    unit_of_measurement: "mm/day"
## works
#sensor:
#  - platform: sen21231
#    id: person_sensor
#    update_interval: 10s
automation:
  - alias: "Reset Pulse Counter"
    trigger:
      platform: time
      at: "00:00:00"
    action:
      lambda: |-
        id(pulse_counter).reset();
##on_...:
##  - sensor.integration.reset: rainfall_buckets

time:
  - platform: homeassistant
    id: esphome_time
    timezone: America/Los_Angeles
