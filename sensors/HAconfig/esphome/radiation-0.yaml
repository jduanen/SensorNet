esphome:
  name: radiation-0
  friendly_name: Radiation Master Bedroom
  includes:
    - uart_read_line_radiation.h

esp8266:
    board: esp01_1m

# Enable logging
logger:
  level: DEBUG  # makes uart stream available in esphome logstream
  baud_rate: 0  # disable logging over uart

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Radiation MBR"
    password: !secret wifi_ap_password

captive_portal:

uart:
  id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 9600

sensor:
  - platform: wifi_signal
    name: "Radiation MBR WiFi Signal"
    update_interval: 60s
  - platform: custom
    lambda: |-
      auto radiation_sensor = new UartReadLineRadiation(id(uart_bus));
      App.register_component(radiation_sensor);
      return {radiation_sensor->countsPerMin_sensor, radiation_sensor->uSvPerHr_sensor, radiation_sensor->volts_sensor};
    sensors:
      - name: "CPM"
        unit_of_measurement: "Counts/Minute"
        accuracy_decimals: 0
        state_class: "measurement"
      - name: "uSieverts/Hour"
        unit_of_measurement: "uSieverts/Hour"
        accuracy_decimals: 4
        state_class: "measurement"
      - name: "Volts"
        unit_of_measurement: "volts"
        accuracy_decimals: 4
        state_class: "measurement"

switch:
  - platform: gpio
    name: "Reset"
    id: Reset
    pin:
      number: GPIO5  # aka D1
    restore_mode: ALWAYS_OFF
    on_turn_on:
      - delay: 500ms
      - switch.turn_off: Reset
