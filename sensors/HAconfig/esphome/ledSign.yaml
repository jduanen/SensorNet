substitutions:
  devicename: leddisplay
  upper_devicename: LED_Display

globals:
  - id: page_index
    type: int
    restore_value: no
    initial_value: '0'

external_components:
  - source:
      type: git
      url: https://github.com/jduanen/ESPHomeComponents
    components: [ led_display ]
    refresh: always

esphome:
  name: ${devicename}
  friendly_name: ${upper_devicename}
  platformio_options:
    board_build.flash_mode: dio
    board_build.mcu: esp32c3

esp32:
  board: seeed_xiao_esp32c3
  variant: esp32c3
  framework:
    type: arduino

# Enable logging
logger:
  level: VERBOSE

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${upper_devicename} Fallback Hotspot"
    password: !secret wifi_ap_password

  power_save_mode: none

captive_portal:

web_server:
  port: 80

display:
  - platform: led_display
    id: leds
    brightness: 50
    #auto_clear_enabled: false
    update_interval: never
#    update_interval: 5s
#    lambda: |-
#      if (id(my_button).state) {
#        it.print(0, 0, id(roboto), "A");
#      } else {
#        it.print(0, 0, id(roboto), " ");
#      }
#      it.print("Hello World");

font:
  - file: "gfonts://Roboto"
    id: roboto
    size: 6

binary_sensor:
  - platform: gpio
    pin: 0
    name: "Button"
    id: my_button
    # debouncing option
    filters:
      - delayed_on: 20ms
    on_press:
      then:
        - lambda: |-
            id(page_index) += 1;
            if (id(page_index) > 2) id(page_index) = 0;
        - lvgl.label.update:
            id: mylabel
            text: !lambda |-
              switch(id(page_index)) {
                case 0: return "First Screen";
                case 1: return "Second Screen";
                case 2: return "Third Screen";
                default: return "First Screen";
              }

lvgl:
  displays:
    - leds
  widgets:
    - label:
        id: mylabel
        align: CENTER
        text: !lambda |-
          switch(id(page_index)) {
            case 0: return "First Screen";
            case 1: return "Second Screen";
            case 2: return "Third Screen";
            default: return "First Screen";
          }
